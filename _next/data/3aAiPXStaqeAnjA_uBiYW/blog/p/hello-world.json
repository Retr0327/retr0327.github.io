{"pageProps":{"post":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h2: \"h2\",\n    p: \"p\",\n    a: \"a\",\n    del: \"del\",\n    sup: \"sup\",\n    section: \"section\",\n    ol: \"ol\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h2, {\n      id: \"why-have-a-blog\",\n      children: \"Why Have a Blog?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"其實要分成什麼時期的我來看待這件事，如果是在 3 年前的我會說因為研究所上有很多人都用 \", _jsx(_components.a, {\n        href: \"https://jekyllrb.com/\",\n        children: \"Jekyll\"\n      }), \" 或 \", _jsx(_components.a, {\n        href: \"https://gohugo.io/\",\n        children: \"Hugo\"\n      }), \" 等技術來生成靜態網頁架在 github pages 上。當時我也嘗試這麼做，但效果不佳，因為\", _jsx(_components.del, {\n        children: \"懶惰\"\n      }), \"覺得麻煩所以就草草亂架。架好的網也站不盡人意，要馬覺得色調太花，要馬覺得無法好好的客製化自己想要的東西，例如 search bar。基於這些因素，再加上日後我開始參與所上教授們的多項計畫，就一直拖到現在了。\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"three-years-later\",\n      children: \"Three Years Later\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"現在的我突然想要建 blog 有兩大主因，一個是最近因要面試開始大量閱讀一些與工程相關的知識，想要強迫自己記下來以便能更好地理解，另一個則是在當了 3 年的全端工程師，學到了如何用 \", _jsx(_components.a, {\n        href: \"https://nextjs.org/\",\n        children: \"NextJs\"\n      }), \" 來刻出一個網站，且在客製化網站上的能力也比以前更好。\"]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"總之，我就用 NextJS 搭配 \", _jsx(_components.a, {\n        href: \"https://mantine.dev/\",\n        children: \"Mantine UI\"\n      }), \" 在一天的時間內做出一個大概的 blog 網站，然後部署在 github pages 上。但這不會是長久之計，因為 github pages 是有容量限制的\", _jsx(_components.sup, {\n        children: _jsx(_components.a, {\n          href: \"#user-content-fn-1\",\n          id: \"user-content-fnref-1\",\n          \"data-footnote-ref\": true,\n          \"aria-describedby\": \"footnote-label\",\n          children: \"1\"\n        })\n      }), \"，購買屬於自己的網域是勢在必行。\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"why-nextjs\",\n      children: \"Why NextJS?\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"之所以採用容量相對較大的 NextJS，主要是因為他的 SSG (Static Site Generation) 和 SSR (Server Side Rendering) 實在是太強大了，讓我在渲染 \", _jsx(_components.a, {\n        href: \"https://mdxjs.com/\",\n        children: \"mdx\"\n      }), _jsx(_components.sup, {\n        children: _jsx(_components.a, {\n          href: \"#user-content-fn-2\",\n          id: \"user-content-fnref-2\",\n          \"data-footnote-ref\": true,\n          \"aria-describedby\": \"footnote-label\",\n          children: \"2\"\n        })\n      }), \" 時快如閃電。除了上述，像是檔案架構即 routing 等優點，都是我日後選擇它來開發前端頁面的主因。\"]\n    }), \"\\n\", _jsx(_components.h2, {\n      id: \"展望\",\n      children: \"展望\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"其實我在刻前端時，主要是參考一個我很常看的程式部落客 - \", _jsx(_components.a, {\n        href: \"https://kennychen-blog.herokuapp.com/\",\n        children: \"Kenny's Blog\"\n      }), \"，然後用 NextJs 和 Mantine UI 去一一實現一些我覺得蠻不錯的功能，像是 \", _jsx(_components.a, {\n        href: \"/archives/1\",\n        children: \"archives\"\n      }), \" 顯示了歷年的文章 \", _jsx(_components.del, {\n        children: \"，也可以順便讓我看看自己的熱度到底會有幾分鐘\"\n      }), \"。寫這篇時的網站應該還很陽春，很多功能我都還沒有補齊，例如顯示 tags 的頁面等等，希望之後有時間可以補上。\"]\n    }), \"\\n\", _jsxs(_components.section, {\n      \"data-footnotes\": true,\n      className: \"footnotes\",\n      children: [_jsx(_components.h2, {\n        className: \"sr-only\",\n        id: \"footnote-label\",\n        children: \"Footnotes\"\n      }), \"\\n\", _jsxs(_components.ol, {\n        children: [\"\\n\", _jsxs(_components.li, {\n          id: \"user-content-fn-1\",\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [\"Github Pages 在幾年前開始限制空間與流量，文件大小上限 1G，而流量則為 100 G。 \", _jsx(_components.a, {\n              href: \"#user-content-fnref-1\",\n              \"data-footnote-backref\": true,\n              className: \"data-footnote-backref\",\n              \"aria-label\": \"Back to content\",\n              children: \"↩\"\n            })]\n          }), \"\\n\"]\n        }), \"\\n\", _jsxs(_components.li, {\n          id: \"user-content-fn-2\",\n          children: [\"\\n\", _jsxs(_components.p, {\n            children: [\"mdx 為 markdown 的擴充格式，它會被編譯成 JSX element，非常適合 React 的 SSG。 \", _jsx(_components.a, {\n              href: \"#user-content-fnref-2\",\n              \"data-footnote-backref\": true,\n              className: \"data-footnote-backref\",\n              \"aria-label\": \"Back to content\",\n              children: \"↩\"\n            })]\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{"title":"孤獨的程式廢人 - Why Have a Blog?","createdAt":"2023-01-21","updatedAt":"2023-01-23","excerpt":"這篇講述了筆者為何突然在某個深夜突然想要重啟自己多年想要寫 blog 的計畫，礙於當時啥都不會只能套用別人的模板，導致無法做出自己想要的樣子。3 年後，且在參與多項計畫後，將帶著所學到的技術嘗試重返最初的感動。","slug":"/blog/p/hello-world","category":["experience","blog"],"coverImage":"https://blog.logrocket.com/wp-content/uploads/2022/03/create-next-js-mdx-blog.png"}},"headings":[{"depth":2,"value":"Why Have a Blog?"},{"depth":2,"value":"Three Years Later"},{"depth":2,"value":"Why NextJS?"},{"depth":2,"value":"展望"}]},"posts":[{"frontMatter":{"title":"關於 HTTP Request Method 的方法屬性","createdAt":"2023-02-13","excerpt":"一直以來我都只認為自己知道何時該用什麼樣的 HTTP request methods，但詳細去了解他們的屬性後，才發現自己漏掉很多很重要的基本知識。","slug":"/blog/p/RESTful-methods","category":["HTTP","RESTful"],"coverImage":"https://www.openprogrammer.info/wp-content/uploads/2015/01/restful.gif"}},{"frontMatter":{"title":"Dependency Inversion Principle & Dependency Injection","createdAt":"2023-01-26","updatedAt":"2023-02-13","excerpt":"這篇想要記錄的是我在學 design patterns (設計模式) 的過程時，常常分不清 dependency injection 和 dependency inversion 之間的關係。因此借機寫成一個 blog，幫自己重新了解一次。","slug":"/blog/p/dip-and-di","category":["design pattern"],"coverImage":"https://stackify.com/wp-content/uploads/2018/06/Design-Patterns-Explained-%E2%80%93-Dependency-Injection-with-Code-Examples.png"}},{"frontMatter":{"title":"ORM 基礎觀念","createdAt":"2023-02-07","updatedAt":"2023-02-13","excerpt":"很常在後端開發使用 ORM (Object-Relational Mapping) 來處理 database，但卻沒有清楚為何該使用它，只知道很多人推薦，於是打算好好紀錄一番。","slug":"/blog/p/orm","category":["database"],"coverImage":"https://miro.medium.com/max/1200/1*Tz54hHWz7O2nWu5AeajVWQ.png"}},{"frontMatter":{"title":"Encoding、Encryption 及 Hashing","createdAt":"2023-02-05","updatedAt":"2023-02-06","excerpt":"很常在後端開發使用 encoding (編碼)、encryption (加密) 和 hashing (雜湊)，但卻傻傻分不清他們的關係，於是打算好好紀錄一番。","slug":"/blog/p/encode-encrypt-hash","category":["security","cryptography"],"coverImage":"https://sectigostore.com/blog/wp-content/uploads/2019/09/HashingvsEncryption-lr-940x529.jpg"}},{"frontMatter":{"title":"ACID 基礎觀念","createdAt":"2023-01-29","updatedAt":"2023-02-05","excerpt":"這篇想要紀錄的是在學關聯式資料庫（Relational Database Management System, RDDMS）或是面試中很常會碰到的專有名詞 —— ACID。","slug":"/blog/p/acid","category":["RDBMS","database"],"coverImage":"https://clockwise.software/img/blog/relational-vs-non-relational-databases-advantages-and-disadvantages/header-background.jpg"}},{"frontMatter":{"title":"npm vs. yarn vs. pnpm","createdAt":"2023-01-24","excerpt":"這篇紀錄了關於 JavaScript modules 管理工具 npm、yarn、pnpm 的歷史關係及原理。","slug":"/blog/p/pnpm","category":["pnpm","nodeJs"],"coverImage":"https://camo.githubusercontent.com/15249b13cd482f77ff1e9f74952f1a01892912af0c5cab22f73f26d595b2f0bf/68747470733a2f2f692e696d6775722e636f6d2f716c57316545472e706e67"}},{"frontMatter":{"title":"孤獨的程式廢人 - Why Have a Blog?","createdAt":"2023-01-21","updatedAt":"2023-01-23","excerpt":"這篇講述了筆者為何突然在某個深夜突然想要重啟自己多年想要寫 blog 的計畫，礙於當時啥都不會只能套用別人的模板，導致無法做出自己想要的樣子。3 年後，且在參與多項計畫後，將帶著所學到的技術嘗試重返最初的感動。","slug":"/blog/p/hello-world","category":["experience","blog"],"coverImage":"https://blog.logrocket.com/wp-content/uploads/2022/03/create-next-js-mdx-blog.png"}}],"frontMatter":{"title":"孤獨的程式廢人 - Why Have a Blog?","createdAt":"2023-01-21","updatedAt":"2023-01-23","excerpt":"這篇講述了筆者為何突然在某個深夜突然想要重啟自己多年想要寫 blog 的計畫，礙於當時啥都不會只能套用別人的模板，導致無法做出自己想要的樣子。3 年後，且在參與多項計畫後，將帶著所學到的技術嘗試重返最初的感動。","slug":"/blog/p/hello-world","category":["experience","blog"],"coverImage":"https://blog.logrocket.com/wp-content/uploads/2022/03/create-next-js-mdx-blog.png"},"siblings":{"next":null,"prev":{"title":"npm vs. yarn vs. pnpm","createdAt":"2023-01-24","excerpt":"這篇紀錄了關於 JavaScript modules 管理工具 npm、yarn、pnpm 的歷史關係及原理。","slug":"/blog/p/pnpm","category":["pnpm","nodeJs"],"coverImage":"https://camo.githubusercontent.com/15249b13cd482f77ff1e9f74952f1a01892912af0c5cab22f73f26d595b2f0bf/68747470733a2f2f692e696d6775722e636f6d2f716c57316545472e706e67"}}},"colorScheme":"light","__N_SSG":true}